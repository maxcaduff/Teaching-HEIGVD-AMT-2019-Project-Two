version: "3"
services:
  traefik:
    image: "traefik:v2.0"
    container_name: "traefikAMT"
    command:
      #- "--log.level=DEBUG"
      #- "--accesslog=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  db:
    container_name: mysqlAMTp2
    build: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: admin
    ports:
      - "3306:3306"
  
  authapi:
    container_name: authapiAMT
    build: auth api/docker
    restart: always
    depends_on:
      - db
    #ports:
    #  - "9000:9000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user.rule=Host(`192.168.99.100`) && PathPrefix(`/authApi`)"
      - "traefik.http.routers.user.entrypoints=web"
      #- "traefik.http.middlewares.add-api.addprefix.prefix=/authApi"

  bookingapi:
    container_name: bookingapiAMT
    build: booking api/docker
    restart: always
    depends_on:
      - db
    #ports:
    #  - "8000:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.booking.rule=Host(`192.168.99.100`) && PathPrefix(`/api`)"
      - "traefik.http.routers.booking.entrypoints=web"
      #- "traefik.http.middlewares.add-api.addprefix.prefix=/api"



